version: '3'

services:
  admin:
    image: mpogonaru/idp_evp_admin:v1
    ports:
        - "9900:9900"
    networks:
      - admin
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    depends_on:
      - admin-backend

  admin-backend:
    image: mpogonaru/idp_evp_admin-backend
    networks:
      - admin
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    depends_on:
      - db

  client:
    image: mpogonaru/idp_evp_client
    ports:
        - "8888:8888"
    networks:
      - frontend
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    depends_on:
      - db

  db:
    image: mpogonaru/idp_evp_db
    # command: --default-authentication-plugin=mysql_native_password
    
    # it would be better if we had just one network to the db and only
    # one service communicating with the db -> no duplicate code
    networks:
      - frontend
      - admin
    volumes:
      - "db-data:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=1
      - MYSQL_DATABASE=idp
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "9000:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    stop_grace_period: 30s
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints:
          - node.role == manager

networks:
  frontend:
  admin:
volumes:
  db-data:
